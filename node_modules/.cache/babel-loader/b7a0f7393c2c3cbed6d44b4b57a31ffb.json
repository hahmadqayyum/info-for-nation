{"ast":null,"code":"var _jsxFileName = \"/home/ahmadqayyum/Desktop/info-for-nation/src/services/weather/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_WEATHER_QUERY } from '../graphql/Queries';\nimport { FiMoon, FiSearch, FiSun } from 'react-icons/fi';\nimport { Spinner, Input, Stack, Table, Tbody, Tr, Td, TableCaption, VStack, StackDivider, HStack, IconButton, Heading, useColorMode, Divider } from '@chakra-ui/react';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  const [result, setResult] = useState('');\n  const [value, setValue] = useState(''); //const [message, setMessage] = useState('')\n\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const [getWeather, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(GET_WEATHER_QUERY, {\n    variables: {\n      name: value\n    }\n  });\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"No City found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n\n  if (data) {//console.log(data)\n    //console.log(error, loading)\n  } // function Errormessage(data) {\n  //   const nullvalue = data.getCityByName\n  //   setMessage(nullvalue)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"Toggle Dark Mode\",\n      icon: colorMode === 'light' ? /*#__PURE__*/_jsxDEV(FiMoon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(FiSun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 52\n      }, this),\n      m: \"8\",\n      size: \"md\",\n      alignSelf: \"flex-end\",\n      onClick: toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      mb: \"8\",\n      size: \"xl\",\n      children: \"Search your city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Enter city name\",\n        value: result,\n        onChange: event => setResult(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Search city button\",\n        icon: /*#__PURE__*/_jsxDEV(FiSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this),\n        onClick: () => {\n          setValue(result);\n          getWeather(); //Errormessage()\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      children: loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          thickness: \"4px\",\n          speed: \"0.65s\",\n          emptyColor: \"gray.200\",\n          color: \"blue.500\",\n          size: \"xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        mt: \"4\",\n        mb: \"4\",\n        borderColor: \"gray.100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 24\n          }, this),\n          borderColor: \"gray.100\",\n          borderWidth: \"2px\",\n          p: \"4\",\n          borderRadius: \"lg\",\n          w: \"100%\",\n          maxW: {\n            base: '90vw',\n            sm: '80vw',\n            lg: '50vw',\n            xl: '40vw'\n          },\n          alignItems: \"stretch\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            variant: \"simple\",\n            children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n              children: [\"Weather in \", data.getCityByName.name, \" right now\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n              children: [/*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: \"Temperature\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  textAlign: \"right\",\n                  children: [Math.floor(data.getCityByName.weather.temperature.actual - 273) + ' ', \"Deg C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: \"Feels like\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  textAlign: \"right\",\n                  children: data.getCityByName.weather.summary.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tr, {\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: \"Wind speed (mph)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  textAlign: \"right\",\n                  children: data.getCityByName.weather.wind.speed + ' '\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"X0SA8bMRok+uxUw+V/IytJS/9DE=\", false, function () {\n  return [useColorMode, useLazyQuery];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/ahmadqayyum/Desktop/info-for-nation/src/services/weather/components/Dashboard.js"],"names":["React","useState","useLazyQuery","GET_WEATHER_QUERY","FiMoon","FiSearch","FiSun","Spinner","Input","Stack","Table","Tbody","Tr","Td","TableCaption","VStack","StackDivider","HStack","IconButton","Heading","useColorMode","Divider","Footer","Dashboard","result","setResult","value","setValue","colorMode","toggleColorMode","getWeather","loading","data","error","variables","name","event","target","base","sm","lg","xl","getCityByName","Math","floor","weather","temperature","actual","summary","description","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useLazyQuery } from '@apollo/client'\nimport { GET_WEATHER_QUERY } from '../graphql/Queries'\nimport { FiMoon, FiSearch, FiSun } from 'react-icons/fi'\nimport {\n  Spinner,\n  Input,\n  Stack,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  TableCaption,\n  VStack,\n  StackDivider,\n  HStack,\n  IconButton,\n  Heading,\n  useColorMode,\n  Divider,\n} from '@chakra-ui/react'\nimport Footer from './Footer'\n\nexport default function Dashboard() {\n  const [result, setResult] = useState('')\n  const [value, setValue] = useState('')\n  //const [message, setMessage] = useState('')\n  const { colorMode, toggleColorMode } = useColorMode()\n\n  const [getWeather, { loading, data, error }] = useLazyQuery(\n    GET_WEATHER_QUERY,\n    {\n      variables: { name: value },\n    }\n  )\n\n  if (error) return <h1>No City found!</h1>\n  if (data) {\n    //console.log(data)\n    //console.log(error, loading)\n  }\n\n  // function Errormessage(data) {\n  //   const nullvalue = data.getCityByName\n  //   setMessage(nullvalue)\n  // }\n\n  return (\n    <VStack>\n      <IconButton\n        aria-label=\"Toggle Dark Mode\"\n        icon={colorMode === 'light' ? <FiMoon /> : <FiSun />}\n        m=\"8\"\n        size=\"md\"\n        alignSelf=\"flex-end\"\n        onClick={toggleColorMode}\n      />\n      <Heading mb=\"8\" size=\"xl\">\n        Search your city\n      </Heading>\n      <HStack>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter city name\"\n          value={result}\n          onChange={(event) => setResult(event.target.value)}\n        />\n        <IconButton\n          aria-label=\"Search city button\"\n          icon={<FiSearch />}\n          onClick={() => {\n            setValue(result)\n            getWeather()\n            //Errormessage()\n          }}\n        >\n          Search\n        </IconButton>\n      </HStack>\n      <Stack>\n        {loading && (\n          <>\n            <Spinner\n              thickness=\"4px\"\n              speed=\"0.65s\"\n              emptyColor=\"gray.200\"\n              color=\"blue.500\"\n              size=\"xl\"\n            />\n          </>\n        )}\n      </Stack>\n      <Stack>\n        <Divider mt=\"4\" mb=\"4\" borderColor=\"gray.100\" />\n        {data && (\n          <>\n            <VStack\n              divider={<StackDivider />}\n              borderColor=\"gray.100\"\n              borderWidth=\"2px\"\n              p=\"4\"\n              borderRadius=\"lg\"\n              w=\"100%\"\n              maxW={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '40vw' }}\n              alignItems=\"stretch\"\n            >\n              <Table variant=\"simple\">\n                <TableCaption>\n                  Weather in {data.getCityByName.name} right now\n                </TableCaption>\n\n                <Tbody>\n                  <Tr>\n                    <Td>Temperature</Td>\n\n                    <Td textAlign=\"right\">\n                      {Math.floor(\n                        data.getCityByName.weather.temperature.actual - 273\n                      ) + ' '}\n                      Deg C\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>Feels like</Td>\n                    <Td textAlign=\"right\">\n                      {data.getCityByName.weather.summary.description}\n                    </Td>\n                  </Tr>\n                  <Tr>\n                    <Td>Wind speed (mph)</Td>\n\n                    <Td textAlign=\"right\">\n                      {data.getCityByName.weather.wind.speed + ' '}\n                    </Td>\n                  </Tr>\n                </Tbody>\n              </Table>\n            </VStack>\n          </>\n        )}\n      </Stack>\n      <Footer />\n    </VStack>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}