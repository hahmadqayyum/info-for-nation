{"ast":null,"code":"var _jsxFileName = \"/home/ahmadqayyum/Desktop/info-for-nation/src/services/weather/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_WEATHER_QUERY } from '../graphql/Queries';\nimport { FiMoon, FiSearch, FiSun } from 'react-icons/fi';\nimport { Spinner, Input, Stack, Table, Tbody, Tr, Td, TableCaption, VStack, StackDivider, HStack, IconButton, Heading, useColorMode, Divider } from '@chakra-ui/react';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  const [result, setResult] = useState('');\n  const [value, setValue] = useState(''); //const [message, setMessage] = useState('')\n\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const [getWeather, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(GET_WEATHER_QUERY, {\n    variables: {\n      name: value\n    }\n  });\n  if (error || !data) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"No City found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 30\n  }, this);\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(VStack, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Toggle Dark Mode\",\n        icon: colorMode === 'light' ? /*#__PURE__*/_jsxDEV(FiMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(FiSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 54\n        }, this),\n        m: \"8\",\n        size: \"md\",\n        alignSelf: \"flex-end\",\n        onClick: toggleColorMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        mb: \"8\",\n        size: \"xl\",\n        children: \"Search your city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Enter city name\",\n          value: result,\n          onChange: event => setResult(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Search city button\",\n          icon: /*#__PURE__*/_jsxDEV(FiSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this),\n          onClick: () => {\n            setValue(result);\n            getWeather(); //Errormessage()\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            thickness: \"4px\",\n            speed: \"0.65s\",\n            emptyColor: \"gray.200\",\n            color: \"blue.500\",\n            size: \"xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          mt: \"4\",\n          mb: \"4\",\n          borderColor: \"gray.100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), data && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 26\n            }, this),\n            borderColor: \"gray.100\",\n            borderWidth: \"2px\",\n            p: \"4\",\n            borderRadius: \"lg\",\n            w: \"100%\",\n            maxW: {\n              base: '90vw',\n              sm: '80vw',\n              lg: '50vw',\n              xl: '40vw'\n            },\n            alignItems: \"stretch\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              variant: \"simple\",\n              children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n                children: [\"Weather in \", data.getCityByName.name, \" right now\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                children: [/*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: \"Temperature\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    textAlign: \"right\",\n                    children: [Math.floor(data.getCityByName.weather.temperature.actual - 273) + ' ', \"Deg C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: \"Feels like\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    textAlign: \"right\",\n                    children: data.getCityByName.weather.summary.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Tr, {\n                  children: [/*#__PURE__*/_jsxDEV(Td, {\n                    children: \"Wind speed (mph)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Td, {\n                    textAlign: \"right\",\n                    children: data.getCityByName.weather.wind.speed + ' '\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this); //console.log(data)\n    //console.log(error, loading)\n  } // function Errormessage(data) {\n  //   const nullvalue = data.getCityByName\n  //   setMessage(nullvalue)\n  // }\n\n}\n\n_s(Dashboard, \"X0SA8bMRok+uxUw+V/IytJS/9DE=\", false, function () {\n  return [useColorMode, useLazyQuery];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/ahmadqayyum/Desktop/info-for-nation/src/services/weather/components/Dashboard.js"],"names":["React","useState","useLazyQuery","GET_WEATHER_QUERY","FiMoon","FiSearch","FiSun","Spinner","Input","Stack","Table","Tbody","Tr","Td","TableCaption","VStack","StackDivider","HStack","IconButton","Heading","useColorMode","Divider","Footer","Dashboard","result","setResult","value","setValue","colorMode","toggleColorMode","getWeather","loading","data","error","variables","name","event","target","base","sm","lg","xl","getCityByName","Math","floor","weather","temperature","actual","summary","description","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useLazyQuery } from '@apollo/client'\nimport { GET_WEATHER_QUERY } from '../graphql/Queries'\nimport { FiMoon, FiSearch, FiSun } from 'react-icons/fi'\nimport {\n  Spinner,\n  Input,\n  Stack,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  TableCaption,\n  VStack,\n  StackDivider,\n  HStack,\n  IconButton,\n  Heading,\n  useColorMode,\n  Divider,\n} from '@chakra-ui/react'\nimport Footer from './Footer'\n\nexport default function Dashboard() {\n  const [result, setResult] = useState('')\n  const [value, setValue] = useState('')\n  //const [message, setMessage] = useState('')\n  const { colorMode, toggleColorMode } = useColorMode()\n\n  const [getWeather, { loading, data, error }] = useLazyQuery(\n    GET_WEATHER_QUERY,\n    {\n      variables: { name: value },\n    }\n  )\n\n  if (error || !data) return <h1>No City found!</h1>\n  if (data) {\n\n    return (\n      <VStack>\n        <IconButton\n          aria-label=\"Toggle Dark Mode\"\n          icon={colorMode === 'light' ? <FiMoon /> : <FiSun />}\n          m=\"8\"\n          size=\"md\"\n          alignSelf=\"flex-end\"\n          onClick={toggleColorMode}\n        />\n        <Heading mb=\"8\" size=\"xl\">\n          Search your city\n        </Heading>\n        <HStack>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter city name\"\n            value={result}\n            onChange={(event) => setResult(event.target.value)}\n          />\n          <IconButton\n            aria-label=\"Search city button\"\n            icon={<FiSearch />}\n            onClick={() => {\n              setValue(result)\n              getWeather()\n              //Errormessage()\n            }}\n          >\n            Search\n          </IconButton>\n        </HStack>\n        <Stack>\n          {loading && (\n            <>\n              <Spinner\n                thickness=\"4px\"\n                speed=\"0.65s\"\n                emptyColor=\"gray.200\"\n                color=\"blue.500\"\n                size=\"xl\"\n              />\n            </>\n          )}\n        </Stack>\n        <Stack>\n          <Divider mt=\"4\" mb=\"4\" borderColor=\"gray.100\" />\n          {data && (\n            <>\n              <VStack\n                divider={<StackDivider />}\n                borderColor=\"gray.100\"\n                borderWidth=\"2px\"\n                p=\"4\"\n                borderRadius=\"lg\"\n                w=\"100%\"\n                maxW={{ base: '90vw', sm: '80vw', lg: '50vw', xl: '40vw' }}\n                alignItems=\"stretch\"\n              >\n                <Table variant=\"simple\">\n                  <TableCaption>\n                    Weather in {data.getCityByName.name} right now\n                  </TableCaption>\n\n                  <Tbody>\n                    <Tr>\n                      <Td>Temperature</Td>\n\n                      <Td textAlign=\"right\">\n                        {Math.floor(\n                          data.getCityByName.weather.temperature.actual - 273\n                        ) + ' '}\n                        Deg C\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>Feels like</Td>\n                      <Td textAlign=\"right\">\n                        {data.getCityByName.weather.summary.description}\n                      </Td>\n                    </Tr>\n                    <Tr>\n                      <Td>Wind speed (mph)</Td>\n\n                      <Td textAlign=\"right\">\n                        {data.getCityByName.weather.wind.speed + ' '}\n                      </Td>\n                    </Tr>\n                  </Tbody>\n                </Table>\n              </VStack>\n            </>\n          )}\n        </Stack>\n        <Footer />\n      </VStack>\n    )\n    //console.log(data)\n    //console.log(error, loading)\n  }\n\n  // function Errormessage(data) {\n  //   const nullvalue = data.getCityByName\n  //   setMessage(nullvalue)\n  // }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}